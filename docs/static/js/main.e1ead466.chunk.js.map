{"version":3,"sources":["reducers/todos.js","reducers/index.js","components/Header.js","actions/index.js","containers/AddTodo.js","components/Todos.js","containers/VisibleTodoList.js","components/App.js","index.js"],"names":["todos","state","action","type","id","text","filter","todo","combineReducers","Header","className","nextTodoId","connect","input","dispatch","onSubmit","e","preventDefault","value","trim","ref","node","Todos","deleteTodo","todoList","length","map","key","onClick","App","VisibleTodoList","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","render","document","getElementById"],"mappings":"8NAiBeA,EAjBD,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACrC,OAAQA,EAAOC,MACd,IAAK,WACJ,MAAM,GAAN,mBACIF,GADJ,CAEC,CACCG,GAAIF,EAAOE,GACXC,KAAMH,EAAOG,QAGhB,IAAK,cACJ,OAAOJ,EAAMK,QAAO,SAAAC,GAAI,OAAIA,EAAKH,KAAOF,EAAOE,MAEhD,QACC,OAAOH,ICZKO,cAAgB,CAC9BR,UCOcS,G,MARA,WACd,OACC,6BACC,wBAAIC,UAAU,oBAAd,aCLCC,EAAa,EC0BFC,iBAtBC,SAAC,GAAkB,IAC9BC,EADcC,EAAe,EAAfA,SAElB,OACC,6BACC,0BACCC,SAAU,SAAAC,GDRS,IAAAX,GCSlBW,EAAEC,iBACGJ,EAAMK,MAAMC,UAGjBL,GDbkBT,ECaDQ,EAAMK,MDbI,CAC/Bf,KAAM,WACNC,GAAIO,IACJN,UCWIQ,EAAMK,MAAQ,MAGf,4DACA,2BAAOE,IAAK,SAAAC,GAAI,OAAKR,EAAQQ,KAC7B,4BAAQlB,KAAK,UAAb,iBCHWmB,EAfD,SAAC,GAA2B,IAAzBtB,EAAwB,EAAxBA,MAAOuB,EAAiB,EAAjBA,WACjBC,EAAWxB,EAAMyB,OACtBzB,EAAM0B,KAAI,SAAAnB,GACT,OACC,yBAAKG,UAAU,kBAAkBiB,IAAKpB,EAAKH,IAC1C,0BAAMwB,QAAS,kBAAML,EAAWhB,EAAKH,MAAMG,EAAKF,UAKnD,uBAAGK,UAAU,UAAb,iBAED,OAAO,yBAAKA,UAAU,oBAAoBc,ICF5BZ,eARS,SAAAX,GAAK,MAAK,CACjCD,MAAOC,EAAMD,UAGa,SAAAc,GAAQ,MAAK,CACvCS,WAAY,SAAAnB,GAAE,OAAIU,EHFO,SAAAV,GAAE,MAAK,CAChCD,KAAM,cACNC,MGA2BmB,CAAWnB,QAGxBQ,CAA6CU,GCA7CO,EAPH,kBACX,yBAAKnB,UAAU,sBACd,kBAAC,EAAD,MACA,kBAACoB,EAAD,MACA,kBAAC,EAAD,QCDIC,EAAQC,YAAYC,EAAaC,OAAOC,8BAAgCD,OAAOC,gCACrFC,iBACC,kBAAC,IAAD,CAAUL,MAAOA,GAChB,kBAAC,EAAD,OAEDM,SAASC,eAAe,W","file":"static/js/main.e1ead466.chunk.js","sourcesContent":["const todos = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase 'ADD_TODO':\n\t\t\treturn [\n\t\t\t\t...state,\n\t\t\t\t{\n\t\t\t\t\tid: action.id,\n\t\t\t\t\ttext: action.text\n\t\t\t\t}\n\t\t\t];\n\t\tcase 'DELETE_TODO':\n\t\t\treturn state.filter(todo => todo.id !== action.id);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\nexport default todos;\n","import { combineReducers } from 'redux';\nimport todos from './todos';\nexport default combineReducers({\n\ttodos\n});\n","import React from 'react';\n\nconst Header = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h1 className='center blue-text'>Tareas</h1>\n\t\t</div>\n\t);\n};\n\nexport default Header;\n","let nextTodoId = 0;\nexport const addTodo = text => ({\n\ttype: 'ADD_TODO',\n\tid: nextTodoId++,\n\ttext\n});\n\nexport const deleteTodo = id => ({\n\ttype: 'DELETE_TODO',\n\tid\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../actions';\n\nconst AddTodo = ({ dispatch }) => {\n\tlet input;\n\treturn (\n\t\t<div>\n\t\t\t<form\n\t\t\t\tonSubmit={e => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tif (!input.value.trim()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdispatch(addTodo(input.value));\n\t\t\t\t\tinput.value = '';\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<label>AÃ±ade una nueva tarea:</label>\n\t\t\t\t<input ref={node => (input = node)} />\n\t\t\t\t<button type='submit'>Add Todo</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default connect()(AddTodo);\n","import React from 'react';\n\nconst Todos = ({ todos, deleteTodo }) => {\n\tconst todoList = todos.length ? (\n\t\ttodos.map(todo => {\n\t\t\treturn (\n\t\t\t\t<div className='collection-item' key={todo.id}>\n\t\t\t\t\t<span onClick={() => deleteTodo(todo.id)}>{todo.text}</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t})\n\t) : (\n\t\t<p className='center'>No hay tareas</p>\n\t);\n\treturn <div className='todos collection'>{todoList}</div>;\n};\n\nexport default Todos;\n","import { connect } from 'react-redux';\nimport Todos from '../components/Todos';\nimport { deleteTodo } from '../actions';\n\nconst mapStateToProps = state => ({\n\ttodos: state.todos\n});\n\nconst mapDispatchToProps = dispatch => ({\n\tdeleteTodo: id => dispatch(deleteTodo(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\n","import React from 'react';\nimport Header from './Header';\nimport AddTodo from '../containers/AddTodo';\nimport VisibleTodoList from '../containers/VisibleTodoList';\n\nconst App = () => (\n\t<div className='todo-app container'>\n\t\t<Header />\n\t\t<VisibleTodoList />\n\t\t<AddTodo />\n\t</div>\n);\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\nimport './stylesheet/index.css';\nimport App from './components/App';\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nrender(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}